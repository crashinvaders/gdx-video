buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        google()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.2'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
        classpath "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
    }
}

plugins {
    id 'com.jfrog.bintray' version '1.7.3'
}

ext {
    minSdkVersion = 17
    targetSdkVersion = 28
    compileSdkVersion = 28
    buildToolsVersion = '28.0.3'
}

allprojects {
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    group = 'com.crashinvaders.gdxvideo'
    version = '0.2.0'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }

	ext {
	    projectGroup = 'gdx-video'
	
	    pomLicenseConfig = {
	       licenses {
	            license {
	                name 'The Apache Software License, Version 2.0'
	                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
	                distribution 'repo'
	            }
	        }
	    }
	    pomLicenseConfig.resolveStrategy = Closure.DELEGATE_ONLY // Otherwise 'license' elem is missing
	}
}

configure(subprojects - project(':demo-android')) {
    apply plugin: 'java'

//    archivesBaseName = projectName

    plugins.withType(JavaPlugin) {
        sourceCompatibility = 1.7
        targetCompatibility = 1.7
        compileJava.options.encoding = 'UTF-8'
        compileTestJava.options.encoding = 'UTF-8'
    }

//    task sourceJar(type: Jar) {
//        from sourceSets.main.allJava
//        classifier "sources"
//    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
//        from sourceSets.main.allJava
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }
}

// Invokes 'build' and 'install' tasks on all projects in the correct order.
// Prefer this over 'gradle build install' when changing the version of library.
task installAll(dependsOn: ['gdx-video-core:build', 'gdx-video-core:install',
                            'gdx-video-desktop:build', 'gdx-video-desktop:install',
                            'gdx-video-android:build', 'gdx-video-android:install'])

//apply plugin: 'maven-publish'
//
//publishing {
//    publications {
//        common(MavenPublication) {
//            artifactId = 'gdx-video'
//
//            def proj = project(":gdx-video")
//            from proj.components.java
//            artifact(proj.sourceJar)
//
//            pom.withXml {
//                asNode().children().last() + proj.ext.pomLicenseConfig
//            }
//        }
//        android(MavenPublication) {
//            artifactId = 'gdx-video-android'
//
//            def proj = project(":gdx-video-android")
//            from proj.components.java
//            artifact(proj.sourceJar)
//
//            pom.withXml {
//                asNode().children().last() + proj.ext.pomLicenseConfig
//            }
//        }
//        desktop(MavenPublication) {
//            artifactId = 'gdx-video-desktop'
//
//            def proj = project(":gdx-video-desktop")
//            from proj.components.java
//            artifact(proj.sourceJar)
//
//            pom.withXml {
//                asNode().children().last() + proj.ext.pomLicenseConfig
//            }
//        }
//        desktop_natives(MavenPublication) {
//            artifactId = 'gdx-video-desktop-natives'
//
//            artifact "libs/gdx-video-desktop-natives-${version}.jar"
//
//            pom.withXml {
//                asNode().children().last() + pomLicenseConfig
//            }
//        }
//    }
//}
//
//bintray {
//    user = System.getenv('BINTRAY_USER')
//    key = System.getenv('BINTRAY_KEY')
//    publications = ['common', 'android', 'desktop', 'desktop_natives']
//    pkg {
//        repo = 'gdx-video'
//        name = 'gdx-video'
//        licenses = ['Apache-2.0']
//        vcsUrl = 'https://github.com/anonl/gdx-video.git'
//        version {
//            name = project.version
//        }
//    }
//}